imperia_vienna_congress_denounce_severity_requirement = 0.2
imperia_vienna_congress_state_claim_severity_requirement = 0.5
imperia_vienna_congress_embargo_severity_requirement = 0.2
imperia_vienna_congress_recognition_severity_requirement = 0.75
imperia_vienna_congress_severity_max = 0.8
imperia_vienna_congress_current_type_severity_requirement = {
	if = {
		limit = {
			global_var:imperia_vienna_congress_session_type = 1
		}
		value = imperia_vienna_congress_denounce_severity_requirement
	}
	else_if = {
		limit = {
			global_var:imperia_vienna_congress_session_type = 2
		}
		value = imperia_vienna_congress_state_claim_severity_requirement
	}
	else_if = {
		limit = {
			global_var:imperia_vienna_congress_session_type = 3
		}
		value = imperia_vienna_congress_embargo_severity_requirement
	}
	else_if = {
		limit = {
			global_var:imperia_vienna_congress_session_type = 4
		}
		value = imperia_vienna_congress_recognition_severity_requirement
	}
}

imperia_vienna_congress_current_type_severity_requirement_negative = {
	value = imperia_vienna_congress_current_type_severity_requirement
	multiply = -1
}

imperia_vienna_congress_severity_max_negative = {
	value = imperia_vienna_congress_severity_max
	multiply = -1
}

imperia_num_of_great_powers = {
	value = 0
	every_country = {
		limit = {
			country_rank = rank_value:great_power
		}
		add = 1
	}
}

imperia_num_of_major_powers = {
	value = 0
	every_country = {
		limit = {
			country_rank = rank_value:major_power
		}
		add = 1
	}
}

imperia_num_of_congress_attendees = {
	value = 0
	every_country = {
		limit = {
			is_congress_attendee = yes
		}
		add = 1
	}
}

total_prestige_of_voting_conference_members = {
	value = 0
	every_country = {
		limit = {
			OR = {
				has_variable = voting_conference_member
				is_target_in_global_variable_list = {
					name = current_congress_members_on_stance_1
					target = this
				}
				is_target_in_global_variable_list = {
					name = current_congress_members_on_stance_2
					target = this
				}
				is_target_in_global_variable_list = {
					name = current_congress_members_on_stance_3
					target = this
				}
			}
		}
		add = prestige
	}
}

conference_supporters_prestige_value = {
	value = 0
	every_country = {
		limit = {
			is_target_in_global_variable_list = {
				name = current_congress_members_on_stance_1
				target = this
			}
		}
		add = prestige
	}
}

conference_neutral_prestige_value = {
	value = 0
	every_country = {
		limit = {
			is_target_in_global_variable_list = {
				name = current_congress_members_on_stance_2
				target = this
			}
		}
		add = prestige
	}
}

conference_opposers_prestige_value = {
	value = 0
	every_country = {
		limit = {
			is_target_in_global_variable_list = {
				name = current_congress_members_on_stance_3
				target = this
			}
		}
		add = prestige
	}
}

conference_supporters_percentage_value = {
	value = conference_supporters_prestige_value
	divide = total_prestige_of_voting_conference_members
}

conference_neutral_percentage_value = {
	value = conference_neutral_prestige_value
	divide = total_prestige_of_voting_conference_members
}

conference_opposers_percentage_value = {
	value = conference_opposers_prestige_value
	divide = total_prestige_of_voting_conference_members
}

conference_power_balance_percentage_value = {
	value = conference_supporters_percentage_value
	subtract = conference_opposers_percentage_value
}

conference_sanctions_severity = {
	if = {
		limit = {
			conference_power_balance_percentage_value < imperia_vienna_congress_current_type_severity_requirement
			conference_power_balance_percentage_value > 0
		}
		value = 0
	}
	else_if = {
		limit = {
			conference_power_balance_percentage_value > imperia_vienna_congress_current_type_severity_requirement_negative
			conference_power_balance_percentage_value < 0
		}
		value = 0
	}
	else_if = {
		limit = {
			conference_power_balance_percentage_value > imperia_vienna_congress_severity_max
		}
		value = 1
	}
	else_if = {
		limit = {
			conference_power_balance_percentage_value < imperia_vienna_congress_severity_max_negative
		}
		value = -1
	}
	else = {
		value = {
			value = conference_power_balance_percentage_value
			subtract = 0.2
			multiply = 1.6667
		}
		max = 1
	}
}

abs_conference_sanctions_severity = {
	value = 0
	if = {
		limit = {
			conference_sanctions_severity > 0
		}
		add = conference_sanctions_severity
	}
	else = {
		subtract = conference_sanctions_severity
	}
}

imperia_vienna_congress_session_target_region_strategic_fraction = {
	value = {
		every_in_global_list = {
			variable = imperia_vienna_congress_session_target_states
			limit = {
				local_var:strategic_region = this.region
			}
			add = 1
		}
	}
	divide = {
		every_in_global_list = {
			variable = imperia_vienna_congress_session_target_states
			add = 1
		}
	}
}

imperia_vienna_congress_session_target_region_culture_fraction = {
	value = {
		every_in_global_list = {
			variable = imperia_vienna_congress_session_target_states
			limit = {
				local_var:culture_var = {
					has_homeland = prev
				}
			}
			add = 1
		}
	}
	divide = {
		every_in_global_list = {
			variable = imperia_vienna_congress_session_target_states
			add = 1
		}
	}
}

imperia_vienna_congress_monthly_chance_for_random_event = {
	value = imperia_num_of_congress_attendees
	divide = 100	# For each x amount of people
	multiply = 5	# x events will pop each month
}

whist_opinion_value = {
	if = {
		# Team 1
		limit = {
			OR = {
				scope:player_1 = this
				scope:player_3 = this
			}
		}
		add = {
			value = var:team_1_points
			if = {
				limit = {
					scope:player_1 = {
						has_variable = plays_whist_honorably
					}
				}
				multiply = 1.3
			}
			if = {
				limit = {
					scope:player_2 = {
						has_variable = plays_whist_honorably
					}
				}
				multiply = 1.3
			}
			if = {
				limit = {
					scope:player_1 = {
						has_variable = plays_whist_communicating
					}
				}
				multiply = 0.7
			}
			if = {
				limit = {
					scope:player_2 = {
						has_variable = plays_whist_communicating
					}
				}
				multiply = 0.7
			}
		}
	}
	if = {
		# Team 2
		limit = {
			OR = {
				scope:player_2 = this
				scope:player_4 = this
			}
		}
		add = {
			value = var:team_2_points
			if = {
				limit = {
					scope:player_2 = {
						has_variable = plays_whist_honorably
					}
				}
				multiply = 1.3
			}
			if = {
				limit = {
					scope:player_4 = {
						has_variable = plays_whist_honorably
					}
				}
				multiply = 1.3
			}
			if = {
				limit = {
					scope:player_2 = {
						has_variable = plays_whist_communicating
					}
				}
				multiply = 0.7
			}
			if = {
				limit = {
					scope:player_4 = {
						has_variable = plays_whist_communicating
					}
				}
				multiply = 0.7
			}
		}
	}
}

random_costume_choice = {
	integer_range = {
		min = 1
		max = 9
	}
}

average_congress_parade_lead_budget = {
	# basically adds 1 to the final number to avoid div/0 errors
	value = 3
	add = global_var:congress_lead_1.var:chosen_budget_amount
	add = global_var:congress_lead_2.var:chosen_budget_amount
	add = global_var:congress_lead_3.var:chosen_budget_amount
	divide = 3
}

congress_parade_highest_spent = {
	if = {
		limit = {
			global_var:imperia_vienna_congress_session_initiator.var:chosen_budget_amount >= average_congress_parade_lead_budget
		}
		value = global_var:imperia_vienna_congress_session_initiator.var:chosen_budget_amount
	}
	else = {
		value = average_congress_parade_lead_budget
	}
}

congress_parade_lowest_spent = {
	if = {
		limit = {
			global_var:imperia_vienna_congress_session_initiator.var:chosen_budget_amount < average_congress_parade_lead_budget
		}
		value = global_var:imperia_vienna_congress_session_initiator.var:chosen_budget_amount
	}
	else = {
		value = average_congress_parade_lead_budget
	}
}

congress_parade_multiplier = {
	value = {
		value = congress_parade_highest_spent
		divide = congress_parade_lowest_spent
	}
	# Subtract 1 here to reduce the chances of excessive multipliers, and remove 1% prestige from otherwise completely even scenarios
	subtract = 1
	# Random number here to even out the finished multiplier
	divide = 4
	# Multiply by the average budget level of the parade; fancy parades have higher impact - both ways
	multiply = congress_parade_average_budget_level_of_parade
	min = 1
	max = 20
}

congress_parade_average_budget_level_of_leads = {
	value = 0
	add = global_var:congress_lead_1.var:chosen_budget_level
	add = global_var:congress_lead_2.var:chosen_budget_level
	add = global_var:congress_lead_3.var:chosen_budget_level
	divide = 3
	round = yes
}

congress_parade_average_budget_level_of_parade = {
	# The parade host and the leads should have an "even" relationship between host and the combined budget of the leads
	# means more weight to the host city in figuring out the overall splendor of the parade...
	value = 0
	add = global_var:imperia_vienna_congress_session_initiator.var:chosen_budget_level
	add = {
		add = global_var:congress_lead_1.var:chosen_budget_level
		add = global_var:congress_lead_2.var:chosen_budget_level
		add = global_var:congress_lead_3.var:chosen_budget_level
		divide = 3
	}
	divide = 2
	round = yes
}

congress_total_prestige_of_attendees = {
	value = 0
	every_country = {
		limit = {
			is_congress_attendee = yes
		}
		add = prestige
	}
}

congress_fraction_of_prestige_who_accepted_language = {
	value = {
		every_country = {
			limit = {
				is_congress_attendee = yes
				has_variable = have_accepted_official_language_of_congress
			}
			add = prestige
		}
	}
	divide = congress_total_prestige_of_attendees
}

weekly_net_income = {
	value = income
	subtract = expenses
}

masked_ball_max_afford = {
	value = gold_reserves
	divide = {
		value = 100
		# percentage of reserves to spend at max
		divide = 10
	}
	divide = {
		# ticks in a month
		value = 4
		#months this will apply for
		multiply = 6
	}
}

# scope : AI voting country
imperia_congress_ai_voting_weight = {
	value = 0
	# Positive value = set to support
	# Negative value = set to oppose
	# First find every target
	every_country = {
		limit = {
			is_congress_target = yes
		}
		if = {
			limit = {
				global_var:imperia_vienna_congress_session_type != 4
			}
			# Subtract their relations, so if the AI has negative relations with the target they will support the motion
			# Only if the motion is not recognition (a positive congress)
			subtract = relations:root
		}
		else = {
			add = relations:root
		}
	}
	global_var:imperia_vienna_congress_session_initiator = {
		# For the initiator a simple add is made; AI will support the initiator if they like them, oppose if they dislike
		add = relations:root
	}
}
